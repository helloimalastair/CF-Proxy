import { OpenAPIRouteSchema, RouteOptions, RouteValidated } from './types';
import { ZodObject } from 'zod';
import { RouteConfig } from '@asteasolutions/zod-to-openapi';
import { IRequest } from 'itty-router';
export declare class OpenAPIRoute<I = IRequest, A extends any[] = any[]> {
    handle(request: I, ...args: A): any;
    static isRoute: boolean;
    static schema: OpenAPIRouteSchema;
    params: RouteOptions;
    constructor(params: RouteOptions);
    static getSchema(): OpenAPIRouteSchema;
    schema(): OpenAPIRouteSchema;
    getSchema(): OpenAPIRouteSchema;
    getSchemaZod(): RouteConfig;
    static getSchemaZod(): RouteConfig;
    handleValidationError(errors: Record<string, any>): Response;
    execute(...args: any[]): Promise<any>;
    extractQueryParameters(request: Request, schema?: ZodObject<any>): Record<string, any> | null;
    validateRequest(request: Request): Promise<RouteValidated>;
}
